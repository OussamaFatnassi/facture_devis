// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quotation {
  id             String            @id @default(cuid())
  version        Int
  status         QuotationStatus
  date           DateTime         @default(now())
  taxRate        Float

  clientId       String
  client         Client           @relation(fields: [clientId], references: [id])

  quotationLines Json             // <-- renommÃ© ici
  
  invoice        Invoice?         // Relation 1:1 avec Invoice
}

model Client {
  id            String   @id @default(cuid())
  firstname     String
  lastname      String
  activityName  String
  address       String
  phone         String
  email         String
  legalStatus   String

  quotations    Quotation[]
  invoices      Invoice[]
}

model Invoice {
  id                   String         @id @default(cuid())
  invoiceNumber        String         @unique
  status               InvoiceStatus  @default(draft)
  date                 DateTime       @default(now())
  dueDate              DateTime
  paidDate             DateTime?
  
  quotationId          String         @unique
  quotation            Quotation      @relation(fields: [quotationId], references: [id])
  
  clientId             String
  client               Client         @relation(fields: [clientId], references: [id])
  
  totalExcludingTax    Float
  totalIncludingTax    Float
  taxRate              Float
  
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
}

enum QuotationStatus {
  draft
  sent
  accepted
  rejected
}

enum InvoiceStatus {
  draft
  sent
  paid
  overdue
  cancelled
}

